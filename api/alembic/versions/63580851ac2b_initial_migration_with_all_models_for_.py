
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '63580851ac2b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=True)
    op.create_index(op.f('ix_categories_slug'), 'categories', ['slug'], unique=True)
    op.create_table('settings',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('key', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('value', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_settings_key'), 'settings', ['key'], unique=True)
    op.create_table('tags',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=True)
    op.create_index(op.f('ix_tags_slug'), 'tags', ['slug'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('email_verified_at', sa.DateTime(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('avatar', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_created_at'), 'users', ['created_at'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_table('access_audit_log',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('attempted_route', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('route_method', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('user_role', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('required_permission', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('access_granted', sa.Boolean(), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('request_headers', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('denial_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_access_audit_log_access_granted'), 'access_audit_log', ['access_granted'], unique=False)
    op.create_index(op.f('ix_access_audit_log_attempted_route'), 'access_audit_log', ['attempted_route'], unique=False)
    op.create_index(op.f('ix_access_audit_log_created_at'), 'access_audit_log', ['created_at'], unique=False)
    op.create_index(op.f('ix_access_audit_log_user_id'), 'access_audit_log', ['user_id'], unique=False)
    op.create_table('content_approvals',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('content_id', sa.Uuid(), nullable=False),
    sa.Column('admin_id', sa.Uuid(), nullable=False),
    sa.Column('action', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('feedback', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_content_approvals_action'), 'content_approvals', ['action'], unique=False)
    op.create_index(op.f('ix_content_approvals_admin_id'), 'content_approvals', ['admin_id'], unique=False)
    op.create_index(op.f('ix_content_approvals_content_id'), 'content_approvals', ['content_id'], unique=False)
    op.create_index(op.f('ix_content_approvals_content_type'), 'content_approvals', ['content_type'], unique=False)
    op.create_index(op.f('ix_content_approvals_created_at'), 'content_approvals', ['created_at'], unique=False)
    op.create_table('follows',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('follower_id', sa.Uuid(), nullable=False),
    sa.Column('followed_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_follows_followed_id'), 'follows', ['followed_id'], unique=False)
    op.create_index(op.f('ix_follows_follower_id'), 'follows', ['follower_id'], unique=False)
    op.create_table('likes',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('likeable_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('likeable_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_likes_likeable_id'), 'likes', ['likeable_id'], unique=False)
    op.create_index(op.f('ix_likes_likeable_type'), 'likes', ['likeable_type'], unique=False)
    op.create_index(op.f('ix_likes_user_id'), 'likes', ['user_id'], unique=False)
    op.create_table('media',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('original_filename', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=False),
    sa.Column('disk', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('alt_text', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_media_user_id'), 'media', ['user_id'], unique=False)
    op.create_table('posts',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('category_id', sa.Uuid(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('excerpt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('body', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('difficulty_level', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('featured', sa.Boolean(), nullable=False),
    sa.Column('comments_enabled', sa.Boolean(), nullable=False),
    sa.Column('generated_image_path', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('feedback', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_category_id'), 'posts', ['category_id'], unique=False)
    op.create_index(op.f('ix_posts_featured'), 'posts', ['featured'], unique=False)
    op.create_index(op.f('ix_posts_published_at'), 'posts', ['published_at'], unique=False)
    op.create_index(op.f('ix_posts_slug'), 'posts', ['slug'], unique=True)
    op.create_index(op.f('ix_posts_status'), 'posts', ['status'], unique=False)
    op.create_index(op.f('ix_posts_user_id'), 'posts', ['user_id'], unique=False)
    op.create_table('system_operations',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('operation_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('admin_id', sa.Uuid(), nullable=False),
    sa.Column('parameters', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False),
    sa.Column('output', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_operations_admin_id'), 'system_operations', ['admin_id'], unique=False)
    op.create_index(op.f('ix_system_operations_created_at'), 'system_operations', ['created_at'], unique=False)
    op.create_index(op.f('ix_system_operations_operation_type'), 'system_operations', ['operation_type'], unique=False)
    op.create_index(op.f('ix_system_operations_status'), 'system_operations', ['status'], unique=False)
    op.create_table('user_follows',
    sa.Column('follower_id', sa.Uuid(), nullable=False),
    sa.Column('followed_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id')
    )
    op.create_table('user_management_logs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('admin_id', sa.Uuid(), nullable=False),
    sa.Column('target_user_id', sa.Uuid(), nullable=True),
    sa.Column('action', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('old_values', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('new_values', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_management_logs_action'), 'user_management_logs', ['action'], unique=False)
    op.create_index(op.f('ix_user_management_logs_admin_id'), 'user_management_logs', ['admin_id'], unique=False)
    op.create_index(op.f('ix_user_management_logs_created_at'), 'user_management_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_management_logs_target_user_id'), 'user_management_logs', ['target_user_id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('newsletter_enabled', sa.Boolean(), nullable=False),
    sa.Column('preferred_categories', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_topics',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'tag_id')
    )
    op.create_table('bookmarks',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('post_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bookmarks_post_id'), 'bookmarks', ['post_id'], unique=False)
    op.create_index(op.f('ix_bookmarks_user_id'), 'bookmarks', ['user_id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('post_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('parent_id', sa.Uuid(), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('guest_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('guest_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_created_at'), 'comments', ['created_at'], unique=False)
    op.create_index(op.f('ix_comments_parent_id'), 'comments', ['parent_id'], unique=False)
    op.create_index(op.f('ix_comments_post_id'), 'comments', ['post_id'], unique=False)
    op.create_index(op.f('ix_comments_status'), 'comments', ['status'], unique=False)
    op.create_index(op.f('ix_comments_user_id'), 'comments', ['user_id'], unique=False)
    op.create_table('post_tags',
    sa.Column('post_id', sa.Uuid(), nullable=False),
    sa.Column('tag_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ),
    sa.PrimaryKeyConstraint('post_id', 'tag_id')
    )
    op.create_table('user_bookmarks',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('post_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'post_id')
    )
    op.create_table('user_likes',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('post_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'post_id')
    )
    op.create_table('user_reads',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('post_id', sa.Uuid(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=False),
    sa.Column('read_progress', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'post_id')
    )
    op.create_table('views',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('post_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('viewed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_views_post_id'), 'views', ['post_id'], unique=False)
    op.create_index(op.f('ix_views_user_id'), 'views', ['user_id'], unique=False)
    op.create_index(op.f('ix_views_viewed_at'), 'views', ['viewed_at'], unique=False)
    op.create_table('comment_likes',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('comment_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'comment_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment_likes')
    op.drop_index(op.f('ix_views_viewed_at'), table_name='views')
    op.drop_index(op.f('ix_views_user_id'), table_name='views')
    op.drop_index(op.f('ix_views_post_id'), table_name='views')
    op.drop_table('views')
    op.drop_table('user_reads')
    op.drop_table('user_likes')
    op.drop_table('user_bookmarks')
    op.drop_table('post_tags')
    op.drop_index(op.f('ix_comments_user_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_status'), table_name='comments')
    op.drop_index(op.f('ix_comments_post_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_parent_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_created_at'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_bookmarks_user_id'), table_name='bookmarks')
    op.drop_index(op.f('ix_bookmarks_post_id'), table_name='bookmarks')
    op.drop_table('bookmarks')
    op.drop_table('user_topics')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_user_management_logs_target_user_id'), table_name='user_management_logs')
    op.drop_index(op.f('ix_user_management_logs_created_at'), table_name='user_management_logs')
    op.drop_index(op.f('ix_user_management_logs_admin_id'), table_name='user_management_logs')
    op.drop_index(op.f('ix_user_management_logs_action'), table_name='user_management_logs')
    op.drop_table('user_management_logs')
    op.drop_table('user_follows')
    op.drop_index(op.f('ix_system_operations_status'), table_name='system_operations')
    op.drop_index(op.f('ix_system_operations_operation_type'), table_name='system_operations')
    op.drop_index(op.f('ix_system_operations_created_at'), table_name='system_operations')
    op.drop_index(op.f('ix_system_operations_admin_id'), table_name='system_operations')
    op.drop_table('system_operations')
    op.drop_index(op.f('ix_posts_user_id'), table_name='posts')
    op.drop_index(op.f('ix_posts_status'), table_name='posts')
    op.drop_index(op.f('ix_posts_slug'), table_name='posts')
    op.drop_index(op.f('ix_posts_published_at'), table_name='posts')
    op.drop_index(op.f('ix_posts_featured'), table_name='posts')
    op.drop_index(op.f('ix_posts_category_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_media_user_id'), table_name='media')
    op.drop_table('media')
    op.drop_index(op.f('ix_likes_user_id'), table_name='likes')
    op.drop_index(op.f('ix_likes_likeable_type'), table_name='likes')
    op.drop_index(op.f('ix_likes_likeable_id'), table_name='likes')
    op.drop_table('likes')
    op.drop_index(op.f('ix_follows_follower_id'), table_name='follows')
    op.drop_index(op.f('ix_follows_followed_id'), table_name='follows')
    op.drop_table('follows')
    op.drop_index(op.f('ix_content_approvals_created_at'), table_name='content_approvals')
    op.drop_index(op.f('ix_content_approvals_content_type'), table_name='content_approvals')
    op.drop_index(op.f('ix_content_approvals_content_id'), table_name='content_approvals')
    op.drop_index(op.f('ix_content_approvals_admin_id'), table_name='content_approvals')
    op.drop_index(op.f('ix_content_approvals_action'), table_name='content_approvals')
    op.drop_table('content_approvals')
    op.drop_index(op.f('ix_access_audit_log_user_id'), table_name='access_audit_log')
    op.drop_index(op.f('ix_access_audit_log_created_at'), table_name='access_audit_log')
    op.drop_index(op.f('ix_access_audit_log_attempted_route'), table_name='access_audit_log')
    op.drop_index(op.f('ix_access_audit_log_access_granted'), table_name='access_audit_log')
    op.drop_table('access_audit_log')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_created_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tags_slug'), table_name='tags')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_settings_key'), table_name='settings')
    op.drop_table('settings')
    op.drop_index(op.f('ix_categories_slug'), table_name='categories')
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
