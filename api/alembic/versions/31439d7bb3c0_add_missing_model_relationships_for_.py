"""Add missing model relationships for social interactions

Revision ID: 31439d7bb3c0
Revises: 63580851ac2b
Create Date: 2025-07-12 17:32:29.680057

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '31439d7bb3c0'
down_revision: Union[str, Sequence[str], None] = '63580851ac2b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_likes')
    op.drop_table('user_follows')
    op.drop_table('user_bookmarks')
    op.create_unique_constraint('uix_user_post_bookmark', 'bookmarks', ['user_id', 'post_id'])
    op.create_unique_constraint('uix_follower_followed', 'follows', ['follower_id', 'followed_id'])
    op.create_unique_constraint('uix_user_likeable', 'likes', ['user_id', 'likeable_type', 'likeable_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uix_user_likeable', 'likes', type_='unique')
    op.drop_constraint('uix_follower_followed', 'follows', type_='unique')
    op.drop_constraint('uix_user_post_bookmark', 'bookmarks', type_='unique')
    op.create_table('user_bookmarks',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('post_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('user_bookmarks_post_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_bookmarks_user_id_fkey')),
    sa.PrimaryKeyConstraint('user_id', 'post_id', name=op.f('user_bookmarks_pkey'))
    )
    op.create_table('user_follows',
    sa.Column('follower_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('followed_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], name=op.f('user_follows_followed_id_fkey')),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], name=op.f('user_follows_follower_id_fkey')),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id', name=op.f('user_follows_pkey'))
    )
    op.create_table('user_likes',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('post_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name=op.f('user_likes_post_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_likes_user_id_fkey')),
    sa.PrimaryKeyConstraint('user_id', 'post_id', name=op.f('user_likes_pkey'))
    )
    # ### end Alembic commands ###
